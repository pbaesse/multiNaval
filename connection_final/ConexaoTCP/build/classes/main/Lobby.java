package main;

import main.thread.ResponseReader;
import java.io.*;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class Lobby extends javax.swing.JFrame {

    private Socket enemy;
    private Socket server;
    private PrintStream toServer;
    private BufferedReader fromServer;
    private String enemyIP;
    private PrintStream toEnemy;
    private BufferedReader fromEnemy;

    public Lobby(Socket server) {
        initComponents();
        this.server = server;

        try {
            // Cria o fluxo de dados com interfaces com suporte a String;
            toServer = new PrintStream(server.getOutputStream());
            fromServer = new BufferedReader(new InputStreamReader(server.getInputStream()));
        } catch (IOException ex) {
            System.out.println("Error: " + ex);
        }

        // Atualiza a porta e o ip do cliente no Lobby
        labelIp.setText(server.getLocalAddress().getHostAddress());
        labelPort.setText("" + server.getLocalPort());

        //btAttack.setVisible(false);
        startThreads();
    }

    public void showMessage(String message) {
        JOptionPane.showMessageDialog(null, message);
    }

    public void showQuestion(String ip) {

        int answer = JOptionPane.showConfirmDialog(null, "O jogador " + ip + " está te convidando para jogar", "NOVO CONVITE", JOptionPane.YES_NO_OPTION);

        if (answer == JOptionPane.YES_OPTION) {
            System.out.println("Aceitei!");
            toServer.println("ACCEPT " + ip);
        } else {
            System.out.println("FUDEU!");
        }
    }

    public void setEnemy(Socket enemy) throws IOException {
        if (enemy == null && !enemy.isClosed()) {
            this.enemyIP = null;
            this.toEnemy.close();
            this.fromEnemy.close();
            this.enemy.close();
            btAttack.setEnabled(false);
            btStop.setEnabled(false);
            btFind.setEnabled(true);
            btFind.setText("Find Match");

            showMessage("Conexão com inimigo desfeita");
        } else {
            this.enemy = enemy;
            this.enemyIP = enemy.getInetAddress().getHostAddress();
            this.toEnemy = new PrintStream(enemy.getOutputStream());
            this.fromEnemy = new BufferedReader(new InputStreamReader(enemy.getInputStream()));
            btAttack.setEnabled(true);
            btStop.setEnabled(true);
            btFind.setEnabled(false);
            btFind.setText("Found!");
        }
    }

    public boolean hasEnemy() {
        if (!enemy.isClosed()) {
            return true;
        } else {
            return false;
        }
    }

    public Socket getServer() {
        return server;
    }

    public PrintStream getToServer() {
        return toServer;
    }

    public BufferedReader getFromServer() {
        return fromServer;
    }

    public javax.swing.JList getLobbyList() {
        return lobbyList;
    }

    private void startThreads() {
        new Thread(new ResponseReader(this)).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lobbyList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        btFind = new javax.swing.JButton();
        btQuit = new javax.swing.JButton();
        btChat = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labelIp = new javax.swing.JLabel();
        labelPort = new javax.swing.JLabel();
        btAttack = new javax.swing.JButton();
        btStop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lobbyList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(lobbyList);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Players online:");

        btFind.setText("Find match");
        btFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFindActionPerformed(evt);
            }
        });

        btQuit.setText("Quit");
        btQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btQuitActionPerformed(evt);
            }
        });

        btChat.setText("Chat");
        btChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChatActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("Your IP:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("Port:");

        labelIp.setForeground(java.awt.Color.blue);
        labelIp.setText("xxx.xxx.xxx.xxx");

        labelPort.setForeground(java.awt.Color.blue);
        labelPort.setText("xxxx");

        btAttack.setText("Attack");
        btAttack.setEnabled(false);
        btAttack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAttackActionPerformed(evt);
            }
        });

        btStop.setText("Stop Battle");
        btStop.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelIp)
                            .addComponent(labelPort)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btChat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btFind, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btQuit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btStop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAttack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(labelIp))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(labelPort))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(btAttack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btStop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btFind)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btChat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btQuit)))
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btQuitActionPerformed
        // Comandos para encerrar o Lobby e não deixar dependências;
        if (hasEnemy()) { try {
            setEnemy(null);
            } catch (IOException ex) {
                System.out.println("Lobby error: " + ex);
            }
}
        toServer.println("QUIT");
        this.dispose();
    }//GEN-LAST:event_btQuitActionPerformed

    private void btChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChatActionPerformed
        String msg = JOptionPane.showInputDialog("Digite sua mensagem");

        // Envia mensagem digitada para o IP também digitado;
        toServer.println("CHAT/" + msg + "/" + lobbyList.getSelectedValue());

    }//GEN-LAST:event_btChatActionPerformed

    private void btFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFindActionPerformed
        toServer.println("FIND");
        btFind.setText("Searching");
        btFind.setEnabled(false);
    }//GEN-LAST:event_btFindActionPerformed

    private void btAttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAttackActionPerformed
        toEnemy.println("ATTACKED");
    }//GEN-LAST:event_btAttackActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAttack;
    private javax.swing.JButton btChat;
    private javax.swing.JButton btFind;
    private javax.swing.JButton btQuit;
    private javax.swing.JButton btStop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelIp;
    private javax.swing.JLabel labelPort;
    private javax.swing.JList lobbyList;
    // End of variables declaration//GEN-END:variables
}
